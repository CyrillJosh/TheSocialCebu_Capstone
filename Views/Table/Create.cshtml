@using TheSocialCebu_Capstone.ViewModels
@model TableVM

@{
    ViewData["Title"] = "Create";
}


<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="TableNumber"></label>
        <input asp-for="TableNumber" class="form-control" id="TableNumberInput" />
        <span asp-validation-for="TableNumber" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="LocationId">Location</label>
        <select asp-for="LocationId" class="form-control" asp-items="Model.LocationList">
            <option value="">-- Select Location --</option>
        </select>
        <span asp-validation-for="LocationId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Generated QR Code Preview</label><br />
        <img id="qrPreview" src="" alt="QR Code Preview" style="max-width: 200px; display:none;" />
    </div>

    <input type="hidden" name="QRCodeBase64" id="QRCodeBase64" />


    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <script>
        document.getElementById('TableNumberInput')?.addEventListener('blur', async function () {
            const number = this.value;
            if (!number) return;
            //QR
            const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=Table-${number}`;
            const response = await fetch(qrUrl);
            const blob = await response.blob();

            const reader = new FileReader();
            reader.onloadend = function () {
                const preview = document.getElementById('qrPreview');
                preview.src = reader.result;
                preview.style.display = 'block';

                document.getElementById('QRCodeBase64').value = reader.result;
            };
            reader.readAsDataURL(blob);


            const file = new File([blob], "qr.png", { type: "image/png" });
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);

            let existing = document.querySelector("input[name='QRCodeImageFile']");
            if (!existing) {
                existing = document.createElement("input");
                existing.type = "file";
                existing.name = "QRCodeImageFile";
                existing.style.display = "none";
                document.forms[0].appendChild(existing);
            }
            existing.files = dataTransfer.files;
        });
    </script>
}