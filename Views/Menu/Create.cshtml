@using TheSocialCebu_Capstone.ViewModels
@model ProductVM

@{
    ViewData["Title"] = "Create Product";
}

<div class="container py-4">
    <div class="bg-dark text-white p-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="mb-0">Add New Product</h3>
            <div>
                <button type="submit" form="productForm" class="btn btn-success fw-bold me-2 px-4">Save</button>
                <a asp-action="Index" class="btn btn-secondary px-4">Cancel</a>
            </div>
        </div>

        <form asp-action="Create" enctype="multipart/form-data" id="productForm">
            <div class="mb-3">
                <input asp-for="ProdName" placeholder="Product Name" class="form-control bg-dark text-white border-secondary" />
                <span asp-validation-for="ProdName" class="text-danger small"></span>
            </div>

            <div class="mb-3">
                <textarea asp-for="Description" placeholder="Description" rows="3" class="form-control bg-dark text-white border-secondary"></textarea>
            </div>

            <div class="mb-3">
                <input id="priceInput" asp-for="Price" type="number" step="any" placeholder="Price" class="form-control bg-dark text-white border-secondary" value="@(Model.Price == 0 ? "" : Model.Price.ToString("0.00"))">
                <span asp-validation-for="Price" class="text-danger small"></span>
            </div>

            <div class="mb-3">
                <select id="categoryDropdown" asp-for="CategoryId" class="form-select bg-dark text-white border-secondary" asp-items="Model.Categories">
                    <option value="">-- Select a Category --</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger small"></span>
            </div>

            <div class="mb-3">
                <select id="subcategoryDropdown" asp-for="SubcategoryId" class="form-select bg-dark text-white border-secondary" asp-items="Model.Subcategories">
                    <option value="">-- Select a Subcategory --</option>
                </select>
                <span asp-validation-for="SubcategoryId" class="text-danger small"></span>
            </div>

            <div class="mb-3">
                <label class="d-block mb-2">Status</label>

                <div class="btn-group" role="group" aria-label="Stock status">
                    <input type="radio" class="btn-check" name="Availability" id="availabilityTrue" value="true" autocomplete="off" checked>
                    <label class="btn btn-outline-success" for="availabilityTrue">In Stock</label>

                    <input type="radio" class="btn-check" name="Availability" id="availabilityFalse" value="false" autocomplete="off">
                    <label class="btn btn-outline-warning" for="availabilityFalse">Sold Out</label>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Change Image</label>
                <div class="input-group">
                    <label class="input-group-text bg-info text-white border-0" for="UploadImage" style="cursor:pointer">Upload</label>
                    <input asp-for="UploadImage" type="file" class="form-control bg-dark text-white border-secondary" id="UploadImage" onchange="previewImage(this)">
                </div>
                <img id="imagePreview" class="img-thumbnail mt-2 d-none" alt="Image Preview" style="max-height: 150px;" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @* Display selected Image *@
    <script>
        function previewImage(input) {
            const preview = document.getElementById("imagePreview");
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = "block";
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
    @* Change Subcategory *@
    <script>
        $('#categoryDropdown').on('change', function () {
            const categoryId = $(this).val();
            const $subcategoryDropdown = $('#subcategoryDropdown');
            $subcategoryDropdown.html('<option value="">-- Loading --</option>');

            if (categoryId) {
                fetch(`/Menu/GetSubcategories?categoryId=${categoryId}`)
                    .then(response => response.json())
                    .then(data => {
                        $subcategoryDropdown.html('<option value="">-- Select Subcategory --</option>');
                        data.forEach(sub => {
                            $subcategoryDropdown.append(
                                $('<option>', {
                                    value: sub.subcategoryId,
                                    text: sub.subcategoryName
                                })
                            );
                        });
                    })
                    .catch(error => {
                        console.error('Error loading subcategories:', error);
                        $subcategoryDropdown.html('<option value="">-- Failed to load --</option>');
                    });
            } else {
                $subcategoryDropdown.html('<option value="">-- Select Subcategory --</option>');
            }
        });
    </script>
    @* Price Format *@
    <script>
        const priceInput = document.getElementById("priceInput");
        priceInput?.addEventListener("input", function (e) {
            const value = this.value;

            if (value.includes(".")) {
                const [whole, decimal] = value.split(".");
                if (decimal.length > 2) {
                    this.value = `${whole}.${decimal.substring(0, 2)}`;
                }
            }
        });
    </script>
}
